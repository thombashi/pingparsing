name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-lint
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - run: make setup-ci

      - run: make check

  unit-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "pypy-3.8"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          - os: macos-latest
            python-version: "3.7"
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-unit-test-${{ matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - run: make setup-ci

      - name: Run tests
        run: tox -e cov -- --discord-verbose=0
        env:
          PYTEST_DISCORD_WEBHOOK: ${{ secrets.PYTEST_DISCORD_WEBHOOK }}

      - name: Upload coverage report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        run: |
          python -m pip install --upgrade --disable-pip-version-check coveralls tomli
          coveralls --service=github
